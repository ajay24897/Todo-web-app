{"version":3,"sources":["constants/index.ts","components/todo/TodoList.tsx","components/todo/index.tsx","commonFunctions/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["COMPLETED","EDIT","DELETE","TOASTMSG","TodoList","todos","todoAction","completedTodos","completedTodoAction","className","length","map","todo","index","size","onClick","Todo","useState","setTodos","setcompletedTodos","todoInput","setTodoInput","isEdit","setIsEdit","editId","setEditId","inputRef","useRef","useEffect","current","focus","localTodos","localStorage","getItem","localCompletedTodos","JSON","parse","setItem","stringify","hadelAddClick","newTodo","toast","trim","value","placeholder","onChange","e","string","target","charAt","toUpperCase","slice","onKeyPress","charCode","ref","action","completedTodo","filter","item","id","updatedTodo","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4d9bdb0.chunk.js","sourcesContent":["export const COMPLETED=\"completed\"\r\nexport const EDIT = \"edit\"\r\nexport const DELETE = \"delete\"\r\n\r\n\r\nexport const NO_TODO_FOUND =\"No todo/s found\"\r\nexport const NO_COMPLETED_TODO_FOUND =\"No completed todo/s found\"\r\n\r\n\r\n\r\n///// toast msg ///\r\n\r\n\r\nexport const TOASTMSG={\r\n    \"DELETED\":\"Todo deleted successfully\",\r\n    \"EDITED\":'Todo updated successfully',\r\n    \"ADDED\":\"Todo added successfully\",\r\n    \"COMPLETED\":\"Great, Todo completed\",\r\n    \"REMOVED\":\"Todo removed from history\"\r\n}","import { MdOutlineModeEdit } from \"react-icons/md\";\r\nimport { AiOutlineCheck } from \"react-icons/ai\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport {\r\n  COMPLETED,\r\n  DELETE,\r\n  EDIT,\r\n  NO_COMPLETED_TODO_FOUND,\r\n  NO_TODO_FOUND,\r\n} from \"../../constants\";\r\n\r\ninterface Iprops {\r\n  todos: string[];\r\n  completedTodos: string[];\r\n  todoAction: (action: string, index: number) => void;\r\n  completedTodoAction: (action: string, index: number) => void;\r\n}\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  todoAction,\r\n  completedTodos,\r\n  completedTodoAction,\r\n}: Iprops) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h4 className=\"heading\">Pending</h4>\r\n        <div className=\"todo-list\">\r\n          {todos?.length > 0 ? (\r\n            todos.map((todo, index) => {\r\n              return (\r\n                <div className=\"single-todo\" key={index}>\r\n                  <div className=\"todo-text\">\r\n                    <p>{index + 1}.&nbsp; </p> <p>{todo}</p>\r\n                  </div>\r\n                  <div className=\"todo-action\">\r\n                    <AiOutlineCheck\r\n                      className={COMPLETED}\r\n                      size={30}\r\n                      onClick={() => todoAction(COMPLETED, index)}\r\n                    />\r\n                    <MdOutlineModeEdit\r\n                      className={EDIT}\r\n                      size={30}\r\n                      onClick={() => todoAction(EDIT, index)}\r\n                    />\r\n                    <RiDeleteBinLine\r\n                      className={DELETE}\r\n                      size={30}\r\n                      onClick={() => todoAction(DELETE, index)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <h4 className=\"no-todo\">{NO_TODO_FOUND}</h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h4 className=\"heading\">Completed</h4>\r\n        <div className=\"todo-list\">\r\n          {completedTodos?.length > 0 ? (\r\n            completedTodos.map((todo, index) => {\r\n              return (\r\n                <div className=\"single-todo\" key={index}>\r\n                  <div className=\"todo-text\">\r\n                    <p>{index + 1}.&nbsp; </p> <p>{todo}</p>\r\n                  </div>\r\n                  <div className=\"todo-action\">\r\n                    <AiOutlineCheck className=\"hidden\" size={30} />\r\n                    <MdOutlineModeEdit className=\"hidden\" size={30} />\r\n                    <RiDeleteBinLine\r\n                      className={DELETE}\r\n                      size={30}\r\n                      onClick={() => completedTodoAction(DELETE, index)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <h4 className=\"no-todo\">{NO_COMPLETED_TODO_FOUND}</h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default TodoList;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\n\r\nimport TodoList from \"./TodoList\";\r\nimport { COMPLETED, DELETE, EDIT, TOASTMSG } from \"../../constants\";\r\nimport { capitalizeFirstLetter } from \"../../commonFunctions\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./todo.scss\";\r\n\r\nconst Todo = () => {\r\n  const [todos, setTodos] = useState<string[]>([]);\r\n  const [completedTodos, setcompletedTodos] = useState<string[]>([]);\r\n\r\n  const [todoInput, setTodoInput] = useState<string>(\"\");\r\n  const [isEdit, setIsEdit] = useState<boolean>(false);\r\n  const [editId, setEditId] = useState<number>(-1);\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current?.focus();\r\n\r\n    const localTodos = localStorage.getItem(\"todos\");\r\n    const localCompletedTodos = localStorage.getItem(\"completedTodos\");\r\n\r\n    if (localTodos) setTodos(JSON.parse(localTodos));\r\n    if (localCompletedTodos) setcompletedTodos(JSON.parse(localCompletedTodos));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"completedTodos\", JSON.stringify(completedTodos));\r\n  }, [completedTodos]);\r\n\r\n  const handelInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let value = e.target.value;\r\n    setTodoInput(capitalizeFirstLetter(value));\r\n  };\r\n\r\n  const hadelAddClick = () => {\r\n    if (todoInput?.length > 0) {\r\n      if (isEdit && editId >= 0) {\r\n        let newTodo = [...todos];\r\n        newTodo[editId] = todoInput;\r\n        setTodos([...newTodo]);\r\n        setIsEdit(false);\r\n        toast(TOASTMSG.EDITED);\r\n      } else {\r\n        setTodos([...todos, todoInput.trim()]);\r\n        toast(TOASTMSG.ADDED);\r\n      }\r\n      setTodoInput(\"\");\r\n    }\r\n  };\r\n\r\n  const onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.charCode === 13) {\r\n      hadelAddClick();\r\n    }\r\n  };\r\n\r\n  const todoAction = (action: string, index: number) => {\r\n    if (action === COMPLETED) {\r\n      let completedTodo = [...todos].filter((item: string, id: number) => {\r\n        return id === index;\r\n      });\r\n\r\n      let updatedTodo = [...todos].filter((item: string, id: number) => {\r\n        return id !== index;\r\n      });\r\n      setTodos([...updatedTodo]);\r\n      setcompletedTodos([...completedTodo, ...completedTodos]);\r\n      toast(TOASTMSG.COMPLETED);\r\n    } else if (action === DELETE) {\r\n      let updatedTodo = [...todos].filter((item: string, id: number) => {\r\n        return id !== index;\r\n      });\r\n      setTodos([...updatedTodo]);\r\n      toast(TOASTMSG.DELETED);\r\n    } else if (action === EDIT) {\r\n      setIsEdit(true);\r\n      inputRef.current?.focus();\r\n      setEditId(index);\r\n      setTodoInput(todos[index]);\r\n    }\r\n  };\r\n\r\n  const completedTodoAction = (action: string, index: number) => {\r\n    if (action === DELETE) {\r\n      let completedTodo = [...completedTodos].filter(\r\n        (item: string, id: number) => {\r\n          return id !== index;\r\n        }\r\n      );\r\n      setcompletedTodos([...completedTodo]);\r\n      toast(TOASTMSG.REMOVED);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-cnt\">\r\n      <div className=\"todo-input-cnt\">\r\n        <input\r\n          value={todoInput}\r\n          className=\"todo-input\"\r\n          placeholder=\"Enter Todo\"\r\n          onChange={handelInput}\r\n          onKeyPress={onKeyPress}\r\n          ref={inputRef}\r\n        />\r\n        <IoIosAdd\r\n          size={50}\r\n          className=\"add-icon\"\r\n          onClick={() => hadelAddClick()}\r\n        />\r\n      </div>\r\n\r\n      <TodoList\r\n        todos={todos}\r\n        todoAction={todoAction}\r\n        completedTodos={completedTodos}\r\n        completedTodoAction={completedTodoAction}\r\n      />\r\n      <ToastContainer position=\"bottom-right\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Todo;\r\n","export const capitalizeFirstLetter=(string: string)=> {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }","\nimport Todo from './components/todo';\nimport \"./scss/index.scss\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}